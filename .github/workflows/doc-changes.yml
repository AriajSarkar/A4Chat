name: Documentation Changes Check

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  check-changes:
    runs-on: ubuntu-latest
    # Map step outputs to job outputs
    outputs:
      only_docs: ${{ steps.filter.outputs.only_docs }}
      
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Check for documentation-only changes
      id: filter
      run: |
        # Get changed files
        CHANGED_FILES=$(git diff --name-only HEAD^)
        
        # Check if changes are only in docs
        DOCS_ONLY=true
        for file in $CHANGED_FILES; do
          if [[ ! $file =~ ^(.github/|.gitignore|CHANGELOG.md|README.md|docs/|*.md)$ ]]; then
            DOCS_ONLY=false
            break
          fi
        done
        
        echo "only_docs=$DOCS_ONLY" >> $GITHUB_OUTPUT
        echo "Changed files:"
        echo "$CHANGED_FILES"
        echo "Docs only: $DOCS_ONLY"

  cancel-workflows:
    needs: check-changes
    if: needs.check-changes.outputs.only_docs == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Cancel other workflows
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const workflows = await github.rest.actions.listWorkflowRuns({
            owner: context.repo.owner,
            repo: context.repo.name,
            status: 'queued',
          });
          
          for (const workflow of workflows.data.workflow_runs) {
            if (workflow.name !== 'Documentation Changes Check') {
              console.log(`Cancelling workflow: ${workflow.name}`);
              await github.rest.actions.cancelWorkflowRun({
                owner: context.repo.owner,
                repo: context.repo.name,
                run_id: workflow.id,
              });
            }
          }
