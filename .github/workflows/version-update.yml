name: Version Update

on:
  workflow_dispatch:
  workflow_call:

jobs:
  update-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Check CHANGELOG.md exists
        id: check_changelog
        run: |
          if [ ! -f CHANGELOG.md ]; then
            echo "# Changelog" > CHANGELOG.md
            echo "Creating new CHANGELOG.md file"
          fi

      - name: Get current version
        id: current_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Update patch version
        id: new_version
        run: |
          NEW_VERSION=$(npm version patch --no-git-tag-version)
          NEW_VERSION=${NEW_VERSION#"v"}
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update CHANGELOG.md
        run: |
          DATE=$(date +"%Y-%m-%d")
          NEW_VERSION="${{ steps.new_version.outputs.version }}"
          CURRENT_VERSION="${{ steps.current_version.outputs.current }}"
          
          if [ ! -s CHANGELOG.md ]; then
            echo "# Changelog" > CHANGELOG.md
          fi
          
          echo "# Changelog

          [$NEW_VERSION] - $DATE
          - Patch update from $CURRENT_VERSION to $NEW_VERSION

            $(cat CHANGELOG.md | tail -n +2)" > CHANGELOG.md

        env:
          CURRENT_VERSION: ${{ steps.current_version.outputs.current }}
          NEW_VERSION: ${{ steps.new_version.outputs.version }}

      - name: Commit and push changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Check if we're on a PR
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            # Get the PR branch name
            branch_name="${{ github.head_ref }}"
            git checkout -b $branch_name
          else
            git checkout -b "version-update/${{ steps.new_version.outputs.version }}"
          fi
          
          git add package.json CHANGELOG.md
          git commit -m "chore: bump version to ${{ steps.new_version.outputs.version }}"
          
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            git push origin HEAD:${{ github.head_ref }} --force
          else
            git push origin "version-update/${{ steps.new_version.outputs.version }}" --force
            
            # Create PR if not already exists
            gh pr create --title "chore: bump version to ${{ steps.new_version.outputs.version }}" \
                        --body "Automated version bump to ${{ steps.new_version.outputs.version }}" \
                        --base main \
                        --head "version-update/${{ steps.new_version.outputs.version }}" \
                        --label "version-bump" || true
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    outputs:
      new_version: ${{ steps.new_version.outputs.version }}

  trigger-build:
    needs: update-version
    runs-on: ubuntu-latest
    steps:
      - name: Wait for branch to be available
        run: sleep 10
        
      - name: Trigger build workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: build.yml
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}
